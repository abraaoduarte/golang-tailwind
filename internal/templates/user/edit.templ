package user

import (
"fmt"
"time"
"example.com/resume/internal/types"
"example.com/resume/internal/templates/base"
)

func EditUrl(id int) string {
return fmt.Sprintf("/users/%v/update/", id)
}

func ParseTimeToString(date time.Time) string {
return fmt.Sprintf("%v", date.Format("2006-01-02"))
}

func ParseBoolToString(isAdmin bool) string {
return fmt.Sprintf("%v", isAdmin)
}

templ Edit(user types.User) {

@base.Layout() {


<div class="bg-gray-900 py-10">
    <div class="px-4 sm:px-6 lg:px-8">
        <div class="sm:flex sm:items-center">
            <div class="sm:flex-auto">
                <h1 class="text-base font-semibold leading-6 text-white">Users</h1>
                <p class="mt-2 text-sm text-gray-300">Edit - {user.Name}</p>
            </div>
            <div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
                <a href="/users/"
                    class="block rounded-md bg-indigo-500 px-3 py-2 text-center text-sm font-semibold text-white hover:bg-indigo-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-500">Back</a>
            </div>
        </div>
    </div>
</div>

<div class="p-4 bg-gray-900 mt-8">
    <form class="max-w-sm mx-auto" action={templ.URL(EditUrl(user.Id))} method="post">

        <div class="mb-5">
            <label for="name" class="block mb-2 text-sm font-medium text-white">Name</label>
            <input type="text" id="name" name="name" value={user.Name}
                class="shadow-sm border text-sm rounded-lg block w-full p-2.5 bg-gray-700 border-gray-600 placeholder-gray-400 text-white focus:ring-blue-500 focus:border-blue-500 shadow-sm-light"
                placeholder="John Cash" required />
        </div>
        <div class="mb-5">
            <label for="email" class="block mb-2 text-sm font-medium text-white">Email</label>
            <input type="email" id="email" name="email" value={user.Email}
                class="shadow-sm border text-sm rounded-lg block w-full p-2.5 bg-gray-700 border-gray-600 placeholder-gray-400 text-white focus:ring-blue-500 focus:border-blue-500 shadow-sm-light"
                placeholder="name@flowbite.com" required />
        </div>


        <div class="mb-5">
            <label for="birthdate" class="block mb-2 text-sm font-medium text-white">Birthdate</label>
            <input type="date" id="birthdate" name="birthdate" value={ParseTimeToString(user.Birthdate)}
                class="shadow-sm border text-sm rounded-lg block w-full p-2.5 bg-gray-700 border-gray-600 placeholder-gray-400 text-white focus:ring-blue-500 focus:border-blue-500 shadow-sm-light"
                placeholder="dd/mm/yyyy" required />
        </div>

        <label class="inline-flex items-center mb-5 cursor-pointer">
            <input type="checkbox" name="isAdmin" class="sr-only peer" if user.IsAdmin { checked="true" }
                value={ParseBoolToString(user.IsAdmin)} />
            <div
                class="relative w-11 h-6 peer-focus:outline-none peer-focus:ring-4 rounded-full peer bg-gray-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:w-5 after:h-5 after:transition-all border-gray-600 peer-checked:bg-blue-600">
            </div>
            <span class="ms-3 text-sm font-medium text-gray-300">Is admin?</span>
        </label>
        <div>
            <button type="submit"
                class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Register</button>
        </div>
        <input type="hidden" name="_method" value="PUT" />
    </form>
</div>

}
}
